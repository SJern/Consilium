exit()
brr
arr
arr.inject{|accum, i| accum += i}
arr.inject(0){|accum, i| accum += i}
arr
brr
arr.inject(0){|accum, i| accum += (arr[i])}
arr.inject(0){|accum, i| accum += (arr[i]*brr[i])}
arr.inject(0){|accum, i| accum += (arr[i]*brr[i)]}
brr
arr
arr.inject(0){|accum, i| accum += arr[i]*brr[i]}
brr
arr
arr[0] = 2
brr = arr.dup
arr = [1, 1, 1]
brr
arr[0] = 2
brr
brr = arr
arr = [1, 1, 1]
Array.new(8) { rand }.dup
Array.new(8) { rand }
features_store
feature_store
exit()
features[1295]
features.keys()
features
features = load_movie_features
feature_store
movie_ids
feature_store
features
exit
row[0]
row.length
row[3]
row[2]
row[1]
row.key
row.keys
row
exit
params.require(:recommender).permit(:rated, :queue)
params.require(:recommender).permit(:rated)
params.require(:recommender)
params
user.ratings[519]
user.ratings[2]
user.ratings[1]
user.ratings
user
c
recommender_params[:queue]
c
rated
n
rated
exit
params.require(:recommender)[:rated]
params.require(:recommender)
params
params.require(:recommender).permit(:rated, :queue)
params.require(:recommender).permit(:rated)
params.require(:recommender).permit
params.require(:recommender)[:rated]
params.require(:recommender)["rated"]
params.require(:recommender)
params.require(:recommender).permit("rated", "queue")
params.require(:recommender).permit(rated, queue)
params.require(:recommender).permit(:rated, :queue)
params.require(:recommender)
params["recommender"]
params["recommender"
params
recommender_params["rated"]
recommender_params[:rated]
params
recommender_params[:rated]
rated
c
movies_map[5522][:year]
movies_map[5132][:year]
movies_map[5131][:year]
movies_map[5129][:year]
movies_map[5128][:year]
movies_map[5123][:year]
movies_map[5124][:year]
movies_map[2132][:year]
movies_map[2132][:title]
movies_map[20][:title]
movies_map[20][:year]
movies_map[10][:year]
movies_map[4][:year]
movies_map[3][:year]
movies_map[2][:year]
movies_map[1][:year]
movies_map[1]
movies[2]
movies[1]
movies
exit
top_rated_movies.first.predicted_rating_for(users[20])
top_rated_movies.first.predicted_rating_for(users[10])
top_rated_movies.first.predicted_rating_for(users[4])
top_rated_movies.first.predicted_rating_for(users[3])
top_rated_movies.first.predicted_rating_for(users[2])
top_rated_movies.first.predicted_rating_for(users[1])
users = Rails.cache.read("users")
exit
top_rated_movies.last.title
top_rated_movies.last.avg_rating
top_rated_movies.last.predicted_rating_for(me)
top_rated_movies.first.predicted_rating_for(me)
me = User.new(nil, {2959 => 4.5, 58559 => 3.5, 2571 => 4.5, 79132 => 5.0, 2329 => 4.0, 92259 => 2.0, 5971 => 3.0, 318 => 5.0})
me = User.new(nil, {2959 => 4.5, 58559 => 3.5, 2571 => 4.5, 79132 => 5.0, 2329 => 4.0, 92259 => 2.0, 5971 => 3.0})
users[9].avg_rating
top_rated_movies.first.predicted_rating_for(users[9])
top_rated_movies.first.predicted_rating_for(users[8])
top_rated_movies.first.predicted_rating_for(users[7])
users[6]
top_rated_movies.first.predicted_rating_for(users[6])
top_rated_movies.first.id
top_rated_movies.first.predicted_rating_for(users[5])
users[5]
users[4]
users[3]
users[1]
users[2]
top_rated_movies.first.viewers.length
top_rated_movies.first.predicted_rating_for(users[4])
top_rated_movies.first.predicted_rating_for(users[3])
top_rated_movies.first.predicted_rating_for(users[2])
top_rated_movies.first.predicted_rating_for(users[1])
users = Rails.cache.read("users")
exit
top_rated_movies[1].viewers
top_rated_movies[1]
movies
users[4].sim(users[20])
users[4].sim(users[19])
users[4].sim(users[2])
users[4].sim(users[1])
users[4]
users[3]
users[2]
users[1]
users = Rails.cache.read("users")
top_rated_movies[0].title
top_rated_movies[0]
exit
Rails.cache.read("movies_by_rating")
top_rated_movies
exit
Movie.top_rated(1).first.avg_rating
Movie.top_rated(1).avg_rating
Movie.top_rated(1).avg_ratings
Movie.top_rated(1)
Movie
user_1.sim(User.new(415, $users[415]))
user_1.sim(User.new(1234, $users[1234]))
user_1.sim(User.new(5123, $users[5123]))
user_1 = User.new(523, $users[523])
exit
user_1.sim(User.new(5123, $users[5123]))
User.new(5123, $users[5123])
$users[5123]
user_1.sim(User.new(5123, $users[5123]))
user_1.sim(User.new(6, $users[6]))
user_1 = User.new(523, $users[523])
user_1 = User.new(8, $users[8])
user_1 = User.new(7, $users[7])
user_1.sim(User.new(7, $users[7]))
user_1.sim(User.new(6, $users[6]))
user_1
user_1.sim(User.new(5, $users[5]))
user_1.sim(User.new(4, $users[4]))
user_1.sim(user_2)
user_2 = User.new(4, $users[4]
user_3 = User.new(3, $users[3])
user_1
Rails.cache.delete("user_1")
Rails.cache.fetch("user_1")
Rails.cache.read("user_1")
Rails.cache.write("user_1", user_1) 
user_1 = User.new(2, $users[2])
User.new(2, $users[2])
c
Rails.cache.keys
Rails.cache
exit
users[2]
user_1.id
user_1 = User.new(2, users[2])
users = eval($redis.get("users"))
User.new
User
exit
top_rated_movies[70].avg_rating
top_rated_movies[70].title
top_rated_movies[56].title
top_rated_movies[54].title
top_rated_movies[54].ratings.length
top_rated_movies[53].ratings.length
top_rated_movies[52].ratings.length
top_rated_movies[51].ratings.length
top_rated_movies[50].ratings.length
top_rated_movies[37].ratings.length
top_rated_movies[37].length
top_rated_movies[37].title
top_rated_movies[37].avg_rating
top_rated_movies[34].avg_rating
top_rated_movies[35].title
top_rated_movies[34].title
top_rated_movies[33].title
top_rated_movies[32].title
top_rated_movies[31].title
top_rated_movies[30].title
top_rated_movies[29].title
top_rated_movies[28].title
top_rated_movies[27].title
top_rated_movies[26].title
top_rated_movies[25].title
top_rated_movies[24].title
top_rated_movies[23].title
top_rated_movies[22].title
top_rated_movies[21].title
top_rated_movies[20].title
top_rated_movies = Movie.top_rated(100)
top_rated_movies[20].title
top_rated_movies[20.title
top_rated_movies[19].title
top_rated_movies[19].ratings.length
top_rated_movies[53].ratings.length
top_rated_movies[10].ratings.length
top_rated_movies = Movie.top_rated(20)
top_rated_movies[10].ratings.length
top_rated_movies[9].ratings.length
top_rated_movies[9].title
top_rated_movies[8].title
top_rated_movies[7].title
top_rated_movies[6].title
top_rated_movies[5].title
top_rated_movies[4].title
top_rated_movies[3].title
top_rated_movies[2].title
top_rated_movies[1].title
top_rated_movies.first.title
params["n"]
exit
top_rated_movies.first.title
top_rated_movies.length
exit
